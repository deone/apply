Business
========
- Sell the original idea.
- Integrate Edem's idea by listing all forms that people are already processing through agents.

- We can get one of Challenges Worldwide volunteers to help with sales.
- For applications with fees, we will take a percentage of fee. For those without fees, we can make money through advertising.
- For a start, encourage organizations with application fees to incentivize applicants by reducing the fee on Apply Central.

Product
=======
- Make sure applicants are unable to fill an application that is not open. Check the is_open flag in both templates and views.
- Make sure applicants are unable to fill an application after specified deadline.
- Automate the creation of form templates.
- Paylater.ng is a good model for Apply Central's homepage.
- Use intercom for messaging.
- Fix formset date display format. Validates wrongly when user clicks save on the form without changing the date. Ask about modifying formset initial data on StackOverflow.
- Also ask about datepicker misbehaviour - when editing dates, if year is not selected, it uses the current year instead of whatever is set on the widget.
- Try to add queryset to forms just like formsets.
- When creating applications, staff can make mistakes. Provide a view application form link with helpful messages instead of errors. e.g ZeroDivisionError means that the staff has not created the application forms. Or better still, disable 'View Application Form' link until enough info has been provided to make it work properly.
- We can add an app_name field to Application model to explicitly specify app name instead of inferring it from Organization short name and application name.
- Think about having applicants sign in with social accounts - Google, Facebook, Twitter.
- Email applicants after account creation and after completing application form.
- Investigate projects like django-forms-builder and wagtail cms.
- Make photo dimensions a setting.
- Ensure fee is provided if has_fee is checked. This would be important when staff are able to create applications.
- There's a decorator function in django.test called modify_settings. We can use this in the test case that modifies the MEDIA_ROOT setting. There's also override_settings, this may be more appropriate.
- Make exhaustive list of all possible use cases of Apply Central, much the same way Victor thought about it.
- When you create sub-domains like ashesi.applycentral.net, also create www.ashesi.applycentral.net because people might type in 'www.'.


Urgent
======
- Ensure staff can see only completed applications. This can be a setting.
- Make images 100% width.
- Move sidebar styles into stylesheet.
- Add some sort of 'Review Form' feature.
- Add longer_username app.
